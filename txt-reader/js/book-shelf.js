document.addEventListener('DOMContentLoaded',()=>{const fileInput=document.getElementById('fileInput');const bookList=document.getElementById('bookList');const addToBookshelfBtn=document.getElementById('addToBookshelf');let selectedBooks=new Set();let metadataDB;const metadataDBRequest=indexedDB.open('bookMetadataDB',1);metadataDBRequest.onupgradeneeded=function(event){metadataDB=event.target.result;if(!metadataDB.objectStoreNames.contains('bookMetadata')){metadataDB.createObjectStore('bookMetadata',{keyPath:'name'})}};metadataDBRequest.onsuccess=function(event){metadataDB=event.target.result;const transaction=metadataDB.transaction(['bookMetadata'],'readonly');const store=transaction.objectStore('bookMetadata');const getAllRequest=store.getAll();getAllRequest.onsuccess=function(){const savedBooks=getAllRequest.result||[];selectedBooks=new Set(savedBooks);renderBooks()}};metadataDBRequest.onerror=function(event){console.error('元数据数据库错误:',event.target.error)};function saveBooksToIndexedDB(){if(!metadataDB)return;const transaction=metadataDB.transaction(['bookMetadata'],'readwrite');const store=transaction.objectStore('bookMetadata');Array.from(selectedBooks).forEach(book=>{store.put(book)})}function renderBooks(){bookList.innerHTML='';selectedBooks.forEach((book,index)=>{const bookCard=document.createElement('div');bookCard.className='book-card';const checkbox=document.createElement('input');checkbox.type='checkbox';checkbox.className='delete-checkbox';checkbox.dataset.bookName=book.name;checkbox.addEventListener('click',(e)=>{e.stopPropagation()});bookCard.appendChild(checkbox);const bookCover=document.createElement('img');bookCover.src='../img/book-banner.jpg';bookCover.alt='书籍封面';bookCover.className='book-cover';const bookInfo=document.createElement('div');bookInfo.className='book-info';const bookTitle=document.createElement('div');bookTitle.className='book-title';bookTitle.textContent=book.name;const bookAuthor=document.createElement('label');bookAuthor.className='book-date';const date=new Date(book.lastModified);const year=date.getFullYear().toString();const month=date.getMonth()+1;const day=date.getDate();const hours=date.getHours().toString().padStart(2,'0');const minutes=date.getMinutes().toString().padStart(2,'0');const seconds=date.getSeconds().toString().padStart(2,'0');bookAuthor.textContent=`☪${year}/${month}/${day}${hours}:${minutes}:${seconds}`;bookInfo.appendChild(bookTitle);bookInfo.appendChild(bookAuthor);bookCard.appendChild(bookCover);bookCard.appendChild(bookInfo);bookCard.dataset.index=index;bookCard.addEventListener('click',async()=>{const dbRequest=indexedDB.open('bookDB',1);dbRequest.onsuccess=function(event){const db=event.target.result;const transaction=db.transaction(['books'],'readonly');const store=transaction.objectStore('books');const getRequest=store.get(encodeURIComponent(book.name));getRequest.onsuccess=function(){const fileContent=getRequest.result?.content;console.log('查询的键:',encodeURIComponent(book.name));console.log('查询结果:',getRequest.result);if(fileContent){const url=new URL('txt-reader/page/book-detail.html',window.location.origin);url.searchParams.set('bookName',encodeURIComponent(book.name));window.location.href=url.toString()}else{alert(`书籍内容不存在，请重新添加！\n查询的键:${encodeURIComponent(book.name)}`)}}};dbRequest.onerror=function(event){console.error('IndexedDB错误:',event.target.error)}});bookList.appendChild(bookCard)})}fileInput.addEventListener('change',(e)=>{const files=Array.from(e.target.files);files.forEach(async(file)=>{if(![...selectedBooks].some(b=>b.name===file.name)){const reader=new FileReader();reader.onload=function(event){const fileContent=event.target.result;const dbRequest=indexedDB.open('bookDB',1);dbRequest.onupgradeneeded=function(event){const db=event.target.result;if(!db.objectStoreNames.contains('books')){db.createObjectStore('books',{keyPath:'name'})}};dbRequest.onsuccess=function(event){const db=event.target.result;const transaction=db.transaction(['books'],'readwrite');const store=transaction.objectStore('books');store.put({name:encodeURIComponent(file.name),content:fileContent});transaction.oncomplete=function(){selectedBooks.add({name:file.name,lastModified:file.lastModified,size:file.size,type:file.type});saveBooksToIndexedDB();renderBooks()}};dbRequest.onerror=function(event){console.error('IndexedDB错误:',event.target.error)}};reader.readAsText(file)}})});renderBooks();const allSelectedBtn=document.getElementById('allSelected');allSelectedBtn.addEventListener('click',()=>{const checkboxes=document.querySelectorAll('.delete-checkbox');const allChecked=[...checkboxes].every(checkbox=>checkbox.checked);checkboxes.forEach(checkbox=>checkbox.checked=!allChecked);allSelectedBtn.textContent=allChecked?'☑':'☒'});document.getElementById('deleteSelected').addEventListener('click',()=>{const checkboxes=document.querySelectorAll('.delete-checkbox:checked');const booksToDelete=Array.from(checkboxes).map(checkbox=>checkbox.dataset.bookName);booksToDelete.forEach(bookName=>{selectedBooks.forEach(book=>{if(book.name===bookName){selectedBooks.delete(book)}})});if(metadataDB){deleteFromMetadataDB(booksToDelete).then(()=>{return deleteFromBookDB(booksToDelete)}).then(()=>{console.log('所有选中的书籍已成功删除');renderBooks()}).catch(error=>{console.error('删除书籍时出错:',error);renderBooks()})}else{renderBooks()}});function deleteFromMetadataDB(bookNames){return new Promise((resolve,reject)=>{const transaction=metadataDB.transaction(['bookMetadata'],'readwrite');const store=transaction.objectStore('bookMetadata');let completed=0;let errors=[];bookNames.forEach(bookName=>{const request=store.delete(bookName);request.onsuccess=()=>{completed++;if(completed===bookNames.length){if(errors.length>0){reject(errors)}else{resolve()}}};request.onerror=(event)=>{console.error(`删除书籍元数据失败:${bookName}`,event.target.error);errors.push(event.target.error);completed++;if(completed===bookNames.length){reject(errors)}}});if(bookNames.length===0){resolve()}})}function deleteFromBookDB(bookNames){return new Promise((resolve,reject)=>{const dbRequest=indexedDB.open('bookDB',1);dbRequest.onerror=(event)=>{reject(event.target.error)};dbRequest.onsuccess=(event)=>{const db=event.target.result;const transaction=db.transaction(['books'],'readwrite');const store=transaction.objectStore('books');let completed=0;let errors=[];bookNames.forEach(bookName=>{const encodedName=encodeURIComponent(bookName);const request=store.delete(encodedName);request.onsuccess=()=>{completed++;if(completed===bookNames.length){if(errors.length>0){reject(errors)}else{resolve()}}};request.onerror=(event)=>{console.error(`删除书籍内容失败:${bookName}`,event.target.error);errors.push(event.target.error);completed++;if(completed===bookNames.length){reject(errors)}}});if(bookNames.length===0){resolve()}}})}});
